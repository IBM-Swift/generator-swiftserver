{
  "swagger": "2.0",
  "info": {
    "version": "0.0.0",
    "title": "<enter your title>"
  },
  "basePath": "/basepath",
  "paths": {
    "/persons": {
      "get": {
        "description": "Gets `Person` objects.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A list of Persons",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/age"
              }
            }
          }
        }
      },
      "post": {
        "description": "Post `Person` objects.",
        "produces": [
          "application/json"
        ],
	"parameters": [
	  {
	  "in": "body",
	  "name": "ageobj",
	  "description": "age of person to post",
	  "required": true,
	  "schema": {
	    "$ref": "#/definitions/age"
	    }
  	  }
	],
        "responses": {
          "200": {
            "description": "A list of Persons",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/age"
              }
            }
          }
        }
      },
      "put": {
        "description": "post `Person` objects.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "id",
            "description": "ID of person to return",
            "required": true,
            "schema": {
              "$ref": "#/definitions/age"
	    }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid id"
          }
        }
      }
    },
    "/persons/{id}": {
      "get": {
        "description": "Gets `Person` objects.",
        "produces": [
          "application/json"
        ],
	"parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of person to return",
            "required": true,
            "type": "string"
          }
	],
        "responses": {
          "200": {
            "description": "A list of Persons",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/age"
              }
            }
          }
        }
      },
      "post": {
        "description": "post `Person` objects.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of person to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "405": {
            "description": "invalid input"
          }
        }
      }
    },
    "/dinosaurs": {
      "get": {
        "description": "Gets `Dinosaur` objects.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A list of Dinosaurs",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/dino"
              }
            }
          }
        }
      }
    },
    "/dinosaurs/{id}": {
      "get": {
        "description": "Gets `Dinosaur` objects.",
        "produces": [
          "application/json"
        ],
	"parameters": [
	{
	"in": "path",
	"name": "id",
	"description": "ID of person to return",
	"required": true,
	"type": "integer"
	}
	],
        "responses": {
          "200": {
            "description": "A list of Dinosaurs",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/dino"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "age": {
      "type": "object",
      "required": [
        "age"
      ],
      "properties": {
        "age": {
          "type": "string"
        }
      }
    },
    "dino": {
      "type": "object",
      "required": [
        "age",
        "heightInt",
        "dietDictionaryInt32"
      ],
      "properties": {
        "age": {
          "type": "string",
          "description": "comments go here"
        },
        "heightInt": {
          "type": "integer"
        },
        "heightInt8": {
          "type": "integer",
          "format": "int8"
        },
        "heightUInt8": {
          "type": "integer",
          "format": "uint8"
        },
        "heightInt16": {
          "type": "integer",
          "format": "int16"
        },
        "heightUInt16": {
          "type": "integer",
          "format": "uint16"
        },
        "heightInt32": {
          "type": "integer",
          "format": "int32"
        },
        "heightUInt32": {
          "type": "integer",
          "format": "uint32"
        },
        "heightInt64": {
          "type": "integer",
          "format": "int64"
        },
        "heightUInt64": {
          "type": "integer",
          "format": "uint64"
        },
        "weight": {
          "type": "number"
        },
        "weightDouble": {
          "type": "number",
          "format": "double"
        },
        "weightFloat": {
          "type": "number",
          "format": "float"
        },
        "toesBool": {
          "type": "boolean"
        },
        "newAgeRef": {
          "$ref": "#/definitions/newage"
        },
        "dietDictionaryInt32": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        },
        "agesArray": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/newage"
          }
        }
      }
    },
    "newage": {
      "type": "object",
      "required": [
        "age"
      ],
      "properties": {
        "age": {
          "type": "string"
        }
      }
    }
  }
}
